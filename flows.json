[
    {
        "id": "4bcce800e9f4e8f4",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "43514cf8d06624f2",
        "type": "tab",
        "label": "Main flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddbb7bea086b7b90",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#5e7ccc",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "daed06a07de91f6e",
        "type": "ui_group",
        "name": "Thông tin môi trường",
        "tab": "4e53ebea557c3eb1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4e53ebea557c3eb1",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8f8575574d82c611",
        "type": "ui_tab",
        "name": "auth-login",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "ab817d941127aea3",
        "type": "ui_tab",
        "name": "auth-signup",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "fef519596157becd",
        "type": "ui_tab",
        "name": "greeter",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "03a4d575031cec75",
        "type": "ui_group",
        "name": "Sign-up-form",
        "tab": "ab817d941127aea3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e2d7f0cab14ea66b",
        "type": "ui_group",
        "name": "Welcome to The night guard!",
        "tab": "fef519596157becd",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "908ccab1d106a84d",
        "type": "ui_group",
        "name": "Log-in-form",
        "tab": "8f8575574d82c611",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "582515c30e2085f0",
        "type": "ui_group",
        "name": "Cài đặt",
        "tab": "4e53ebea557c3eb1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "865a1c42bdeea9dc",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com ",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "42e9fcb1f0126366",
        "type": "ui_numeric",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "label": "Nhiệt độ",
        "tooltip": "",
        "group": "582515c30e2085f0",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 460,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f1758f8b4a009f3e",
        "type": "ui_numeric",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "label": "Độ ẩm",
        "tooltip": "",
        "group": "582515c30e2085f0",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "step": 1,
        "className": "",
        "x": 450,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "647d2477af278492",
        "type": "mqtt in",
        "z": "4bcce800e9f4e8f4",
        "name": "data collector",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "865a1c42bdeea9dc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 330,
        "y": 240,
        "wires": [
            [
                "429dcfc2f335ed3d"
            ]
        ]
    },
    {
        "id": "e043b296c26090a2",
        "type": "inject",
        "z": "4bcce800e9f4e8f4",
        "name": "subscribeData",
        "props": [
            {
                "p": "action",
                "v": "subscribe",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "dataTopic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "647d2477af278492"
            ]
        ]
    },
    {
        "id": "429dcfc2f335ed3d",
        "type": "json",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 570,
        "y": 240,
        "wires": [
            [
                "35404d13424dd6be",
                "13a076fb1625a89f",
                "948f6408aaf107ce",
                "33394e5f909d07cb"
            ]
        ]
    },
    {
        "id": "35404d13424dd6be",
        "type": "function",
        "z": "4bcce800e9f4e8f4",
        "name": "getTemp",
        "func": "msg.payload = msg.payload.data[0]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 160,
        "wires": [
            [
                "7ccec3abf5dced76"
            ]
        ]
    },
    {
        "id": "13a076fb1625a89f",
        "type": "function",
        "z": "4bcce800e9f4e8f4",
        "name": "getHumidity",
        "func": "msg.payload = msg.payload.data[1]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "898f2b67ce468632"
            ]
        ]
    },
    {
        "id": "948f6408aaf107ce",
        "type": "function",
        "z": "4bcce800e9f4e8f4",
        "name": "getLux",
        "func": "msg.payload = msg.payload.data[2]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 320,
        "wires": [
            [
                "f755f1b777b98967"
            ]
        ]
    },
    {
        "id": "7ccec3abf5dced76",
        "type": "ui_chart",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "group": "daed06a07de91f6e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Nhiệt độ",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 960,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "898f2b67ce468632",
        "type": "ui_chart",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "group": "daed06a07de91f6e",
        "order": 4,
        "width": "0",
        "height": "0",
        "label": "Độ ẩm",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "20",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f755f1b777b98967",
        "type": "ui_gauge",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "group": "daed06a07de91f6e",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Ánh sáng",
        "label": "Lux",
        "format": "{{value}}",
        "min": "0.01",
        "max": "100000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "1,000",
        "seg2": "10,000",
        "diff": false,
        "className": "",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "33394e5f909d07cb",
        "type": "function",
        "z": "4bcce800e9f4e8f4",
        "name": "WriteDB",
        "func": "let dataPoints = [];\nconst { getDatabase, ref, child, push, update } = global.get(\"firebaseDB\");\n\nlet user = global.get(\"user\");\nlet {series : labels, data} = msg.payload;\nlet timestamp = Date.now();\nfor(let i =0;i<labels.length;i++){\n    dataPoints.push({\n        \"label\" : labels[i],\n        \"data\" : data[i],\n        \"product_id\" : user.product_id,\n    });\n}\nconsole.log(dataPoints);\nconst db = getDatabase(global.get(\"app\"));\n// Write the new post's data simultaneously in the posts list and the user's post list.\nconst updates = {};\nupdates['/product_data/' + user.product_id + \"/\" + timestamp] = dataPoints;\nreturn update(ref(db), updates);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "655f3c682be23a06",
        "type": "mqtt out",
        "z": "4bcce800e9f4e8f4",
        "name": "buzzer",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "865a1c42bdeea9dc",
        "x": 710,
        "y": 80,
        "wires": []
    },
    {
        "id": "d6cd76b76df77bea",
        "type": "ui_switch",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "label": "Loa",
        "tooltip": "",
        "group": "582515c30e2085f0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "commandTopic",
        "topicType": "global",
        "style": "",
        "onvalue": "buzzer_on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "buzzer_off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "f1a5aa4f3511d555",
                "655f3c682be23a06"
            ]
        ]
    },
    {
        "id": "f1a5aa4f3511d555",
        "type": "function",
        "z": "4bcce800e9f4e8f4",
        "name": "function 1",
        "func": "console.log(msg.topic);\nconsole.log(msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "21d87780b1c4792b",
        "type": "mqtt in",
        "z": "4bcce800e9f4e8f4",
        "name": "",
        "topic": "91728327/command",
        "qos": "2",
        "datatype": "utf8",
        "broker": "865a1c42bdeea9dc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 360,
        "wires": [
            [
                "c6f3d457efe423b4"
            ]
        ]
    },
    {
        "id": "c6f3d457efe423b4",
        "type": "debug",
        "z": "4bcce800e9f4e8f4",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 360,
        "wires": []
    },
    {
        "id": "75c620f2cd6f073b",
        "type": "function",
        "z": "43514cf8d06624f2",
        "name": "sign-up func",
        "func": "let email = msg.payload.email;\nlet password = msg.payload.password;\nlet firebaseAuth = flow.get(\"firebaseAuth\");\nlet firebaseApp = flow.get(\"firebaseApp\");\nconst firebaseDB =global.get(\"firebaseDB\");\nlet pId = msg.payload.esp_id;\nlet auth = flow.get(\"auth\");\nfirebaseAuth.createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n    // Signed up \n        const user = userCredential.user;\n        try{       \n            const db = firebaseDB.getDatabase(global.get(\"app\"));\n            \n            const userDataTemplate = {\n                \"product_id\": pId,\n                \"lux_line\": 10000,\n                \"temperature_line\": 30,\n                \"humdity_line\": 30,\n                \"associate_emails\" : [email]\n            };\n            const updates = {};\n            updates[`/users/${user.uid}`] = userDataTemplate;\n            firebaseDB.update(firebaseDB.ref(db), updates);   \n        }\n        catch(e){\n            console.log(e);\n        }\n        global.set(\"error\", \"sign_up_success\")\n        // ...\n    })\n    .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // ..\n        console.log(error);\n        global.set(\"error\", error.code);\n    });\nmsg.payload.error = global.get(\"error\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "c93379c85a4226c0",
                "c6db07c02acaec01",
                "901d2ce129b5130d"
            ]
        ]
    },
    {
        "id": "1db2edec474e4330",
        "type": "inject",
        "z": "43514cf8d06624f2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "greeter",
        "payloadType": "str",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "6db4ca4daec6b406"
            ]
        ]
    },
    {
        "id": "5a64446eb11130f5",
        "type": "inject",
        "z": "43514cf8d06624f2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "Welcome to The night guard!",
        "payloadType": "str",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "8e39c74644ce9008"
            ]
        ]
    },
    {
        "id": "203d4b54cdacd0ed",
        "type": "inject",
        "z": "43514cf8d06624f2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "If you're new here, select Sign up!",
        "payloadType": "str",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "f7c669eddb1177f9"
            ]
        ]
    },
    {
        "id": "14eb8a0d45ac7ff2",
        "type": "inject",
        "z": "43514cf8d06624f2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "If not, select Log in!",
        "payloadType": "str",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "598f24c9068cdc73"
            ]
        ]
    },
    {
        "id": "8d8a5aa927d0376f",
        "type": "inject",
        "z": "43514cf8d06624f2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 40,
        "wires": [
            [
                "292819b5eb4de6e2"
            ]
        ]
    },
    {
        "id": "8fd2bbea4ec1be32",
        "type": "ui_form",
        "z": "43514cf8d06624f2",
        "name": "",
        "label": "",
        "group": "03a4d575031cec75",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Enter e-mail",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Enter password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Enter ESP ID",
                "value": "esp_id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "email": "",
            "password": "",
            "esp_id": ""
        },
        "payload": "",
        "submit": "Register",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "75c620f2cd6f073b"
            ]
        ]
    },
    {
        "id": "8e39c74644ce9008",
        "type": "ui_text",
        "z": "43514cf8d06624f2",
        "group": "e2d7f0cab14ea66b",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "<center>{{msg.payload}}</center>",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Gill Sans,Geneva,sans-serif",
        "fontSize": "16",
        "color": "#ffffff",
        "x": 470,
        "y": 160,
        "wires": []
    },
    {
        "id": "f7c669eddb1177f9",
        "type": "ui_text",
        "z": "43514cf8d06624f2",
        "group": "e2d7f0cab14ea66b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "Gill Sans,Geneva,sans-serif",
        "fontSize": "14",
        "color": "#ffffff",
        "x": 470,
        "y": 200,
        "wires": []
    },
    {
        "id": "598f24c9068cdc73",
        "type": "ui_text",
        "z": "43514cf8d06624f2",
        "group": "e2d7f0cab14ea66b",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "Gill Sans,Geneva,sans-serif",
        "fontSize": "14",
        "color": "#ffffff",
        "x": 470,
        "y": 240,
        "wires": []
    },
    {
        "id": "6db4ca4daec6b406",
        "type": "ui_ui_control",
        "z": "43514cf8d06624f2",
        "name": "",
        "events": "all",
        "x": 460,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "292819b5eb4de6e2",
        "type": "function",
        "z": "43514cf8d06624f2",
        "name": "flow definitions",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nlet config = {\n    apiKey: \"AIzaSyCbIzhn2q6pcsQbQJ61C-6CzmtB2HQXZ8s\",\n\n    authDomain: \"hcmus-the-night-guard.firebaseapp.com\",\n\n    databaseURL: \"https://hcmus-the-night-guard-default-rtdb.firebaseio.com\",\n\n    projectId: \"hcmus-the-night-guard\",\n\n    storageBucket: \"hcmus-the-night-guard.appspot.com\",\n\n    messagingSenderId: \"248101530790\",\n\n    appId: \"1:248101530790:web:fe2a4114de0fc3e9c49867\",\n\n    measurementId: \"G-JYGX9DH3CC\"\n\n};\nconst app = !firebaseApp.getApps().length ? firebaseApp.initializeApp(config) : firebaseApp.getApp();\nconst auth = firebaseAuth.getAuth();\nflow.set(\"auth\", auth);\nflow.set(\"firebaseAuth\", firebaseAuth);\nflow.set(\"firebaseApp\", firebaseApp);\nglobal.set(\"firebaseDB\", firebaseDB);\nglobal.set(\"app\", app);",
        "finalize": "",
        "libs": [
            {
                "var": "firebaseAuth",
                "module": "firebase/auth"
            },
            {
                "var": "firebaseApp",
                "module": "firebase/app"
            },
            {
                "var": "firebaseDB",
                "module": "firebase/database"
            }
        ],
        "x": 450,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "871fa91c3eea53ce",
        "type": "ui_button",
        "z": "43514cf8d06624f2",
        "name": "",
        "group": "e2d7f0cab14ea66b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Sign up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "auth-signup",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "68d16d7742af950a"
            ]
        ]
    },
    {
        "id": "a4440a9f2557af8b",
        "type": "ui_button",
        "z": "43514cf8d06624f2",
        "name": "",
        "group": "e2d7f0cab14ea66b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log in",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "auth-login",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 440,
        "wires": [
            [
                "68d16d7742af950a"
            ]
        ]
    },
    {
        "id": "68d16d7742af950a",
        "type": "ui_ui_control",
        "z": "43514cf8d06624f2",
        "name": "",
        "events": "all",
        "x": 480,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "511a3ce603ce4729",
        "type": "function",
        "z": "43514cf8d06624f2",
        "name": "log-in func",
        "func": "let email = msg.payload.email;\nlet password = msg.payload.password;\nlet firebaseAuth = flow.get(\"firebaseAuth\");\nlet firebaseApp = flow.get(\"firebaseApp\");\nconst firebaseDB = global.get(\"firebaseDB\");\nlet auth = flow.get(\"auth\");\nfirebaseAuth.signInWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n    // Signed up \n        const user = userCredential.user;\n        const dbRef = firebaseDB.ref(firebaseDB.getDatabase(global.get(\"app\")));\n        firebaseDB.get(firebaseDB.child(dbRef, `users/${user.uid}`)).then((snapshot) => {\n            if (snapshot.exists()) {\n                let currUser = snapshot.val();\n                currUser['email'] = email;\n                currUser['uid'] = user.uid;\n                console.log(\"login here\");\n                console.log(currUser);\n                global.set(\"user\",currUser);\n                global.set(\"dataTopic\",`${currUser.product_id}/datas`);\n                global.set(\"gasTopic\", `${currUser.product_id}/gasState`);\n                global.set(\"commandTopic\",`${currUser.product_id}/command`);\n                console.log(snapshot.val());\n                global.set(\"error\", \"none\");\n            } else {\n                global.set(\"error\",\"NO ACCOUNT\");\n            }\n        }).catch((error) => {\n            global.set(\"error\",error);\n        });\n    // ...\n    })\n    .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(error.code);\n        if (error.code !== 'auth/email-already-in-use')\n            global.set(\"error\", error.code);\n    });\nmsg.payload.error = global.get(\"error\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 580,
        "wires": [
            [
                "c93379c85a4226c0",
                "c6db07c02acaec01"
            ]
        ]
    },
    {
        "id": "2c3d43de6c60047c",
        "type": "ui_form",
        "z": "43514cf8d06624f2",
        "name": "",
        "label": "",
        "group": "908ccab1d106a84d",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Enter e-mail",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Enter password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "email": "",
            "password": ""
        },
        "payload": "",
        "submit": "Login",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 100,
        "y": 580,
        "wires": [
            [
                "511a3ce603ce4729"
            ]
        ]
    },
    {
        "id": "c93379c85a4226c0",
        "type": "function",
        "z": "43514cf8d06624f2",
        "name": "error classifier",
        "func": "console.log(msg.payload.error);\nif (msg.payload.error === \"none\")\n{\n    msg.payload = 'Home';\n}\nelse\n{\n    msg.payload = \"greeter\";\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 460,
        "wires": [
            [
                "8ab44e2e7cce4586"
            ]
        ]
    },
    {
        "id": "8ab44e2e7cce4586",
        "type": "ui_ui_control",
        "z": "43514cf8d06624f2",
        "name": "",
        "events": "all",
        "x": 900,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "65aaa5544205edc5",
        "type": "ui_toast",
        "z": "43514cf8d06624f2",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 900,
        "y": 700,
        "wires": []
    },
    {
        "id": "c6db07c02acaec01",
        "type": "function",
        "z": "43514cf8d06624f2",
        "name": "notification display",
        "func": "if (msg.payload.error === 'auth/invalid-credential') {\n    msg.payload = \"Account does not exist\\n or Invalid information\";\n}\nelse if (msg.payload.error === 'auth/email-already-in-use') {\n    msg.payload = \"E-mail already in use.\";\n}\nelse if (msg.payload.error === 'auth/weak-password') {\n    msg.payload = 'Weak password, consider a stronger one.';\n}\nelse if (msg.payload.error === 'sign_up_success'){\n    msg.payload = 'Sign up successful';\n}\nelse {\n    msg.payload = \"Login successful\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 660,
        "wires": [
            [
                "65aaa5544205edc5"
            ]
        ]
    },
    {
        "id": "57659e3c56e6d391",
        "type": "comment",
        "z": "43514cf8d06624f2",
        "name": "Chạy 1 lần để dẫn tới trang chủ",
        "info": "",
        "x": 730,
        "y": 40,
        "wires": []
    },
    {
        "id": "49b3c2d87604528d",
        "type": "comment",
        "z": "43514cf8d06624f2",
        "name": "Sign up và log-in",
        "info": "Nếu fail thì quay lại trang chủ, cả 2 quá trình đều vậy",
        "x": 1100,
        "y": 500,
        "wires": []
    },
    {
        "id": "7f4e0d4d06111381",
        "type": "comment",
        "z": "43514cf8d06624f2",
        "name": "Tài liệu tham khảo",
        "info": "https://firebase.google.com/docs/auth/web/password-auth#create_a_password-based_account",
        "x": 1090,
        "y": 40,
        "wires": []
    },
    {
        "id": "901d2ce129b5130d",
        "type": "debug",
        "z": "43514cf8d06624f2",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 560,
        "wires": []
    }
]